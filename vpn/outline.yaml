- name: Setup Outline
  become: true
  hosts: vpn
  vars:
    sb_api_port: 13337
    outline_dir: "/opt/outline"
    persisted_state: "{{ outline_dir }}/persisted-state"
  tasks:
    - name: Generate a random password
      ansible.builtin.set_fact:
        random_bytes: "{{ lookup('ansible.builtin.password', '/dev/null length=16 chars=bytes') }}"

    - name: URL-safe Base64 encode the random password
      ansible.builtin.set_fact:
        random_b64: "{{ random_bytes | b64encode }}"

    - name: Convert Base64 to URL-safe Base64
      ansible.builtin.set_fact:
        sb_api_prefix: "{{ random_b64 | replace('+', '-') | replace('/', '_') | replace('=', '') }}"

    - name: Generate public api string
      ansible.builtin.set_fact:
        public_api_url: "https://{{ inventory_hostname }}:{{ sb_api_port }}/{{ sb_api_prefix }}"

    - name: Display Public API URL
      ansible.builtin.debug:
        msg: "API URL: {{ public_api_url }}"

    - name: Create outline dir
      ansible.builtin.file:
        path: "{{ outline_dir }}"
        state: directory
        mode: u+s,ug+rwx,o-rwx

    - name: Copy docker-compose.yml
      ansible.builtin.copy:
        src: ./outline/docker-compose.yml
        dest: "{{ outline_dir }}/docker-compose.yml"
        mode: u+s,ug+rwx,o-rwx

    - name: Create persisted_state
      ansible.builtin.file:
        path: "{{ persisted_state }}"
        state: directory
        mode: ug+rwx,g+s,o-rwx

    - name: Install cryptography
      community.general.rpm_ostree_pkg:
        name:
          - python3-cryptography
          - docker-compose
      register: rpm_ostree_pkg_result

    - name: Reboot after ostree-pkg installed
      when:
        - rpm_ostree_pkg_result is defined
        - rpm_ostree_pkg_result.changed
      ansible.builtin.reboot:

    - name: Generate a private RSA key
      community.crypto.openssl_privatekey:
        path: "{{ persisted_state }}/shadowbox-selfsigned.key"
        size: 4096
        type: RSA

    - name: Generate a Certificate Signing Request (CSR)
      community.crypto.openssl_csr:
        path: "{{ persisted_state }}/shadowbox-selfsigned.csr"
        privatekey_path: "{{ persisted_state }}/shadowbox-selfsigned.key"
        common_name: "{{ inventory_hostname }}"
        organization_name: "Leito.Tech"

    - name: Create a self-signed certificate
      community.crypto.x509_certificate:
        path: "{{ persisted_state }}/shadowbox-selfsigned.crt"
        csr_path: "{{ persisted_state }}/shadowbox-selfsigned.csr"
        privatekey_path: "{{ persisted_state }}/shadowbox-selfsigned.key"
        provider: selfsigned

    - name: Retrieve the SHA-256 fingerprint of the certificate
      changed_when: false
      ansible.builtin.shell: "openssl x509 -in {{ persisted_state }}/shadowbox-selfsigned.crt -noout -sha256 -fingerprint | sed 's/^sha256 Fingerprint=//' | tr -d :"
      register: cert_fingerprint

    - name: Display fingerprint
      ansible.builtin.debug:
        msg: "certSha256: {{ cert_fingerprint.stdout }}"

    - name: Template access config
      ansible.builtin.template:
        src: ./outline/config.j2
        dest: "{{ outline_dir }}/config.json"
        mode: u+s,ug+rwx,o-rwx

    - name: Template .env
      ansible.builtin.template:
        src: ./outline/.env.sample
        dest: "{{ outline_dir }}/.env"
        mode: u+s,ug+rwx,o-rwx

    - name: Template shadowbox_server_config.json
      ansible.builtin.template:
        src: ./outline/shadowbox_server_config.j2
        dest: "{{ persisted_state }}/shadowbox_server_config.json"
        mode: ug+rwx,g+s,o-rwx

    - name: Start docker compose
      community.docker.docker_compose_v2:
        project_src: "{{ outline_dir }}"
        state: present
